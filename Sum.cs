using System;

class Program
{
    static void Main(string[] args)
    {
        int firstNumber = GetNumber(\"Enter the first number: \");
        int secondNumber = GetNumber(\"Enter the second number: \");

        // Calculate the sum of the two numbers
        int sum = firstNumber + secondNumber;

        // Output the result
        Console.WriteLine(\"The sum of {0} and {1} is {2}.\", firstNumber, secondNumber, sum);
    }

    static int GetNumber(string prompt)
    {
        int number;
        string input;
        do
        {
            Console.Write(prompt);
            input = Console.ReadLine();
        } while (!int.TryParse(input, out number));

        return number;
    }
}
